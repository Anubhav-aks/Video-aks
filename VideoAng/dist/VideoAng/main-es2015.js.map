{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/safe.pipe.ts","./src/app/video-center/video-center.component.ts","./src/app/video-center/video-center.component.html","./src/app/video-detail/video-detail.component.ts","./src/app/video-detail/video-detail.component.html","./src/app/video-list/video-list.component.ts","./src/app/video-list/video-list.component.html","./src/app/video.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { VideoCenterComponent } from './video-center/video-center.component';\n\n\nconst routes: Routes = [{path:\"\", redirectTo:'/home' , pathMatch:\"full\"},\n  {path:\"home\", component:HomeComponent},\n  {path:\"video\", component:VideoCenterComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'VideoAng';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a class=\"navbar-brand\" href=\"#\">Video Player</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n     data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"home\">Home<span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"video\">Playlist</a>\r\n        </li>\r\n      </ul>\r\n      <span class=\"navbar-text\">\r\n        Navbar text with an inline element\r\n      </span>\r\n    </div>\r\n  </nav>\r\n  <router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { VideoCenterComponent } from './video-center/video-center.component';\n\nimport { SafePipe } from './safe.pipe';\nimport {FormsModule} from '@angular/forms'\nimport {HttpClientModule} from '@angular/common/http';\nimport { VideoDetailComponent } from './video-detail/video-detail.component';\nimport { VideoListComponent } from './video-list/video-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    VideoCenterComponent,\n    \n    SafePipe,\n    \n    VideoDetailComponent,\n    \n    VideoListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron jumbotron-fluid\">\n    <div class=\"container\">\n      <h1 class=\"display-2\">Video Player</h1>\n          </div>\n  </div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\nconstructor(private sanitizer:DomSanitizer){\n\n}\n  transform(url:any){ return this.sanitizer.bypassSecurityTrustResourceUrl(url)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Video } from '../video'\nimport { VideoService } from '../video.service'\n\n@Component({\n  selector: 'app-video-center',\n  templateUrl: './video-center.component.html',\n  styleUrls: ['./video-center.component.css'],\n\n})\nexport class VideoCenterComponent implements OnInit {\n\n  public selectedVideo: Video;\n\n  constructor(private videoService: VideoService) { }\n  public new: boolean = false;\n  public videos;\n  ngOnInit() {\n    this.videoService.getVideo().subscribe(data => this.videos = data)\n  }\n  onSentVideo(vid: any) {\n    this.selectedVideo = vid;\n    console.log(this.selectedVideo)\n  }\n  onPost(value) {\n    this.videoService.postVideo(value).subscribe(\n      res => {\n        console.log(res)\n        this.videos.push(res)\n        this.new = false\n      }\n    )\n  }\n  onClick() {\n    this.new = true\n  }\n \n  \n}\n\n\n\n\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-sm-9\">\n            <div *ngIf=\"new\">\n                <h1>New Video</h1>\n                <form #form=\"ngForm\" class='well'>\n                 <div class=\"form-group\">\n                     <label>Title</label>\n                     <input type=\"text\" class=\"form-control\" name=\"title\" ngModel>\n                 </div>\n                 <div class=\"form-group\">\n                    <label>URL</label>\n                    <input type=\"text\" class=\"form-control\" name=\"url\" ngModel>\n                </div>\n                <div class=\"form-group\">\n                    <label>Description</label>\n                    <textarea type=\"text\" class=\"form-control\" name=\"description\" ngModel></textarea>\n                </div>\n                <button type=\"button\" (click)=\"onPost(form.value)\" class=\"btn btn-success btn-lg btn-block\">Post</button>\n                </form>\n            </div>\n           <video-detail *ngIf=\"selectedVideo\" [video]=\"selectedVideo\"></video-detail>\n        </div>\n        <div class=\"col-sm-3\">\n            <div class=\"top\">\n            <button type=\"button\" (click)=\"onClick()\" class=\"btn btn-success btn-lg btn-block\">Add Video</button>\n        <video-list (SelectVideo)=\"onSentVideo($event)\" [videos]=\"videos\"></video-list>\n        </div>\n            \n        </div>\n    </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\nimport {VideoService} from '../video.service'\nimport { EventEmitter } from 'protractor';\n\n@Component({\n  selector: 'video-detail',\n  templateUrl: './video-detail.component.html',\n  styleUrls: ['./video-detail.component.css']\n  ,\n  inputs:['video']\n  \n})\nexport class VideoDetailComponent implements OnInit {\npublic onEdit=false;\n  constructor() { }\n//   public updatedVideo=new EventEmitter()\npublic video;\n  ngOnInit(){\n  }\n  onEditTitle(){\n    this.onEdit=true;\n  }\n \n}\n","<div class=\"dis\">\n    <div>\n        <iframe width=\"840\" height=\"490\"\n        ng-show=\"showvideo\"  [src]='video.url | safe' allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n    </div>\n    <form>\n        <div *ngIf=\"onEdit\" class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" name=\"title\" [(ngModel)]=\"video.title\">\n        </div>\n        <h1 *ngIf=\"!onEdit\" (click)=\"onEditTitle()\">{{video.title}}</h1>\n        <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" name=\"url\" [(ngModel)]=\"video.url\">\n        </div>\n        <div class=\"form-group\">\n            <textarea type=\"text\" class=\"form-control\" name=\"description\" [(ngModel)]=\"video.description\"></textarea>\n        </div>\n        \n    </form>\n</div>","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Video } from '../video';\n\n@Component({\n  selector: 'video-list',\n  templateUrl: './video-list.component.html',\n  styleUrls: ['./video-list.component.css'],\n  inputs:['videos'],\n  outputs:['SelectVideo']\n})\nexport class VideoListComponent implements OnInit {\npublic videos;\n  constructor() { }\npublic SelectVideo=new EventEmitter;\n  ngOnInit(): void {\n  }\n  onSelectVideo(vid:Video){\nthis.SelectVideo.emit(vid)\n  }\n\n}\n","<div class=\"list-group\">\n    <button type=\"button\" class=\"list-group-item list-group-item-action\" (click)=\"onSelectVideo(video)\"\n     *ngFor=\"let video of videos\">\n      {{video.title}}\n    </button>\n    \n  </div>","import { Injectable } from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http'\nimport {Video} from './video'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VideoService {\n\n  private getUrl='/control/videos'\n  private postUrl='/control/video'\n  private putUrl='/control/video/'\n\n  constructor(private http:HttpClient) { }\n\n  getVideo(){\n   return this.http.get(this.getUrl)\n  }\n  postVideo(vid:Video){\n    return this.http.post(this.postUrl,vid)\n  }\n  putVideo(vid:Video){\n    return this.http.put(this.putUrl+`${vid._id}`,vid)\n  }\n  deleteVideo(vid:Video){\n    return this.http.delete(this.postUrl+`${vid._id}`)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}