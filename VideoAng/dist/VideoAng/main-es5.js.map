{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/safe.pipe.ts","webpack:///src/app/video-center/video-center.component.ts","webpack:///src/app/video-center/video-center.component.html","webpack:///src/app/video-detail/video-detail.component.ts","webpack:///src/app/video-detail/video-detail.component.html","webpack:///src/app/video-list/video-list.component.ts","webpack:///src/app/video-list/video-list.component.html","webpack:///src/app/video.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","SafePipe","sanitizer","url","bypassSecurityTrustResourceUrl","name","VideoCenterComponent","videoService","getVideo","subscribe","data","videos","vid","selectedVideo","console","log","value","postVideo","res","push","onClick","onSentVideo","VideoDetailComponent","onEdit","inputs","VideoListComponent","SelectVideo","emit","outputs","VideoService","http","getUrl","postUrl","putUrl","get","post","put","_id","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { VideoCenterComponent } from './video-center/video-center.component';\n\n\nconst routes: Routes = [{path:\"\", redirectTo:'/home' , pathMatch:\"full\"},\n  {path:\"home\", component:HomeComponent},\n  {path:\"video\", component:VideoCenterComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'VideoAng';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a class=\"navbar-brand\" href=\"#\">Video Player</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n     data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"home\">Home<span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"video\">Playlist</a>\r\n        </li>\r\n      </ul>\r\n      <span class=\"navbar-text\">\r\n        Navbar text with an inline element\r\n      </span>\r\n    </div>\r\n  </nav>\r\n  <router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { VideoCenterComponent } from './video-center/video-center.component';\n\nimport { SafePipe } from './safe.pipe';\nimport {FormsModule} from '@angular/forms'\nimport {HttpClientModule} from '@angular/common/http';\nimport { VideoDetailComponent } from './video-detail/video-detail.component';\nimport { VideoListComponent } from './video-list/video-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    VideoCenterComponent,\n    \n    SafePipe,\n    \n    VideoDetailComponent,\n    \n    VideoListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron jumbotron-fluid\">\n    <div class=\"container\">\n      <h1 class=\"display-2\">Video Player</h1>\n          </div>\n  </div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\nconstructor(private sanitizer:DomSanitizer){\n\n}\n  transform(url:any){ return this.sanitizer.bypassSecurityTrustResourceUrl(url)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Video } from '../video'\nimport { VideoService } from '../video.service'\n\n@Component({\n  selector: 'app-video-center',\n  templateUrl: './video-center.component.html',\n  styleUrls: ['./video-center.component.css'],\n\n})\nexport class VideoCenterComponent implements OnInit {\n\n  public selectedVideo: Video;\n\n  constructor(private videoService: VideoService) { }\n  public new: boolean = false;\n  public videos;\n  ngOnInit() {\n    this.videoService.getVideo().subscribe(data => this.videos = data)\n  }\n  onSentVideo(vid: any) {\n    this.selectedVideo = vid;\n    console.log(this.selectedVideo)\n  }\n  onPost(value) {\n    this.videoService.postVideo(value).subscribe(\n      res => {\n        console.log(res)\n        this.videos.push(res)\n        this.new = false\n      }\n    )\n  }\n  onClick() {\n    this.new = true\n  }\n \n  \n}\n\n\n\n\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-sm-9\">\n            <div *ngIf=\"new\">\n                <h1>New Video</h1>\n                <form #form=\"ngForm\" class='well'>\n                 <div class=\"form-group\">\n                     <label>Title</label>\n                     <input type=\"text\" class=\"form-control\" name=\"title\" ngModel>\n                 </div>\n                 <div class=\"form-group\">\n                    <label>URL</label>\n                    <input type=\"text\" class=\"form-control\" name=\"url\" ngModel>\n                </div>\n                <div class=\"form-group\">\n                    <label>Description</label>\n                    <textarea type=\"text\" class=\"form-control\" name=\"description\" ngModel></textarea>\n                </div>\n                <button type=\"button\" (click)=\"onPost(form.value)\" class=\"btn btn-success btn-lg btn-block\">Post</button>\n                </form>\n            </div>\n           <video-detail *ngIf=\"selectedVideo\" [video]=\"selectedVideo\"></video-detail>\n        </div>\n        <div class=\"col-sm-3\">\n            <div class=\"top\">\n            <button type=\"button\" (click)=\"onClick()\" class=\"btn btn-success btn-lg btn-block\">Add Video</button>\n        <video-list (SelectVideo)=\"onSentVideo($event)\" [videos]=\"videos\"></video-list>\n        </div>\n            \n        </div>\n    </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\nimport {VideoService} from '../video.service'\nimport { EventEmitter } from 'protractor';\n\n@Component({\n  selector: 'video-detail',\n  templateUrl: './video-detail.component.html',\n  styleUrls: ['./video-detail.component.css']\n  ,\n  inputs:['video']\n  \n})\nexport class VideoDetailComponent implements OnInit {\npublic onEdit=false;\n  constructor() { }\n//   public updatedVideo=new EventEmitter()\npublic video;\n  ngOnInit(){\n  }\n  onEditTitle(){\n    this.onEdit=true;\n  }\n \n}\n","<div class=\"dis\">\n    <div>\n        <iframe width=\"840\" height=\"490\"\n        ng-show=\"showvideo\"  [src]='video.url | safe' allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n    </div>\n    <form>\n        <div *ngIf=\"onEdit\" class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" name=\"title\" [(ngModel)]=\"video.title\">\n        </div>\n        <h1 *ngIf=\"!onEdit\" (click)=\"onEditTitle()\">{{video.title}}</h1>\n        <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" name=\"url\" [(ngModel)]=\"video.url\">\n        </div>\n        <div class=\"form-group\">\n            <textarea type=\"text\" class=\"form-control\" name=\"description\" [(ngModel)]=\"video.description\"></textarea>\n        </div>\n        \n    </form>\n</div>","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Video } from '../video';\n\n@Component({\n  selector: 'video-list',\n  templateUrl: './video-list.component.html',\n  styleUrls: ['./video-list.component.css'],\n  inputs:['videos'],\n  outputs:['SelectVideo']\n})\nexport class VideoListComponent implements OnInit {\npublic videos;\n  constructor() { }\npublic SelectVideo=new EventEmitter;\n  ngOnInit(): void {\n  }\n  onSelectVideo(vid:Video){\nthis.SelectVideo.emit(vid)\n  }\n\n}\n","<div class=\"list-group\">\n    <button type=\"button\" class=\"list-group-item list-group-item-action\" (click)=\"onSelectVideo(video)\"\n     *ngFor=\"let video of videos\">\n      {{video.title}}\n    </button>\n    \n  </div>","import { Injectable } from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http'\nimport {Video} from './video'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VideoService {\n\n  private getUrl='/control/videos'\n  private postUrl='/control/video'\n  private putUrl='/control/video/'\n\n  constructor(private http:HttpClient) { }\n\n  getVideo(){\n   return this.http.get(this.getUrl)\n  }\n  postVideo(vid:Video){\n    return this.http.post(this.postUrl,vid)\n  }\n  putVideo(vid:Video){\n    return this.http.put(this.putUrl+`${vid._id}`,vid)\n  }\n  deleteVideo(vid:Video){\n    return this.http.delete(this.postUrl+`${vid._id}`)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}